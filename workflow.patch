diff --git a/instrument_generator/settings.py b/instrument_generator/settings.py
index c157ddc..8f68c36 100644
--- a/instrument_generator/settings.py
+++ b/instrument_generator/settings.py
@@ -76,7 +76,7 @@ INSTALLED_APPS = [
     "django.contrib.messages",
     "django.contrib.staticfiles",
     # Your apps
-    "instruments",
+    "instruments.apps.InstrumentsConfig",
     "accounts",
     "mailer",
     "widget_tweaks",
@@ -196,4 +196,10 @@ if DEBUG:
     EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
     ADMINS = [
         ("Site Admin", "admin@doc-gen.eu"),
-    ]
\ No newline at end of file
+    ]
+
+# ----------------------------------------------------------------------------
+# EMAIL
+# ----------------------------------------------------------------------------
+DEFAULT_FROM_EMAIL = "noreply@example.com"
+MANAGERS = [("Redactie", "redactie@example.com")]
\ No newline at end of file
diff --git a/instruments/admin.py b/instruments/admin.py
index 4b3dae8..5c22d12 100644
--- a/instruments/admin.py
+++ b/instruments/admin.py
@@ -5,6 +5,8 @@ Beschrijving: Definieert de admin interface voor InstrumentSubmission, Submitter
 
 from django.contrib import admin
 from django.forms.models import BaseInlineFormSet
+from django.core.exceptions import ValidationError
+from django.contrib import messages
 from .models import InstrumentSubmission, Submitter, Note
 
 
@@ -49,13 +51,58 @@ class InstrumentSubmissionAdmin(admin.ModelAdmin):
     """
     Admin interface voor InstrumentSubmission.
     """
-    list_display = ("subject", "instrument", "date", "updated_at")
+    list_display = ("id", "instrument", "subject", "status", "owner", "updated_at")
     search_fields = ("subject",)
-    list_filter = ("instrument", "date")
+    list_filter = ("status", "instrument", "date")
+    actions = ["mark_as_review", "mark_as_approved"]
     ordering = ("-updated_at",)
     inlines = [SubmitterInline, NoteInline]
     readonly_fields = ("timestamp", "updated_at")
 
+    @admin.action(description="Markeer geselecteerde items als 'review'")
+    def mark_as_review(self, request, queryset):
+        success, fail = 0, 0
+        for obj in queryset:
+            try:
+                obj.submit_for_review(request.user)
+                success += 1
+            except ValidationError:
+                fail += 1
+        if success:
+            self.message_user(
+                request,
+                f"{success} submission(s) naar review verplaatst.",
+                messages.SUCCESS,
+            )
+        if fail:
+            self.message_user(
+                request,
+                f"{fail} submission(s) konden niet worden verplaatst.",
+                messages.WARNING,
+            )
+
+    @admin.action(description="Markeer geselecteerde items als 'goedgekeurd'")
+    def mark_as_approved(self, request, queryset):
+        success, fail = 0, 0
+        for obj in queryset:
+            try:
+                obj.approve(request.user)
+                success += 1
+            except ValidationError:
+                fail += 1
+        if success:
+            self.message_user(
+                request,
+                f"{success} submission(s) goedgekeurd.",
+                messages.SUCCESS,
+            )
+        if fail:
+            self.message_user(
+                request,
+                f"{fail} submission(s) konden niet worden goedgekeurd.",
+                messages.WARNING,
+            )
+
 
 @admin.register(Note)
 class NoteAdmin(admin.ModelAdmin):
diff --git a/instruments/apps.py b/instruments/apps.py
index ae3fcc7..ea69590 100644
--- a/instruments/apps.py
+++ b/instruments/apps.py
@@ -4,8 +4,36 @@ Beschrijving: Configuratie van de instruments app.
 """
 
 from django.apps import AppConfig
+from django.db.models.signals import post_migrate
+
+
+def create_workflow_permissions(sender, **kwargs):
+    """
+    Zorgt ervoor dat de custom workflowâ€‘permissies bestaan
+    zodra de migraties zijn uitgevoerd.
+    """
+    from django.contrib.auth.models import Permission
+    from django.contrib.contenttypes.models import ContentType
+    from instruments.models import InstrumentSubmission  # lokale import om circulars te voorkomen
+
+    ct = ContentType.objects.get_for_model(InstrumentSubmission)
+    Permission.objects.get_or_create(
+        codename="can_submit_review",
+        name="Kan concept indienen voor review",
+        content_type=ct,
+    )
+    Permission.objects.get_or_create(
+        codename="can_approve_submission",
+        name="Kan submissions goedkeuren",
+        content_type=ct,
+    )
 
 
 class InstrumentsConfig(AppConfig):
     default_auto_field = 'django.db.models.BigAutoField'
-    name = 'instruments'
\ No newline at end of file
+    name = 'instruments'
+
+    def ready(self):
+        # Koppel het signaal zodat de permissies worden aangemaakt na elke migrate
+        post_migrate.connect(create_workflow_permissions, sender=self)
+        import instruments.signals  # registreert signal receivers
\ No newline at end of file
diff --git a/instruments/models.py b/instruments/models.py
index 52202c7..11f2803 100644
--- a/instruments/models.py
+++ b/instruments/models.py
@@ -6,6 +6,7 @@ en notities (Note). Nu wordt elke InstrumentSubmission gekoppeld aan een eigenaa
 
 from django.db import models
 from django.conf import settings
+from django.core.exceptions import ValidationError
 
 class InstrumentSubmission(models.Model):
     """
@@ -14,6 +15,11 @@ class InstrumentSubmission(models.Model):
     wordt er nu ook een eigenaar (owner) bijgehouden om te bepalen
     welke gebruiker de submission aangemaakt heeft.
     """
+    # === workflow status definitions ===
+    class Status(models.TextChoices):
+        CONCEPT   = "concept",   "Concept"
+        REVIEW    = "review",    "Review"
+        APPROVED  = "approved",  "Goedgekeurd"
     # Eigendom (owner) van de submission
     owner = models.ForeignKey(
         settings.AUTH_USER_MODEL,
@@ -42,6 +48,29 @@ class InstrumentSubmission(models.Model):
     timestamp = models.DateTimeField(auto_now_add=True)
     updated_at = models.DateTimeField(auto_now=True)
 
+    # Workflowstatus
+    status = models.CharField(
+        max_length=20,
+        choices=Status.choices,
+        default=Status.CONCEPT,
+        db_index=True,
+    )
+
+    # --- workflow transition helpers ------------------------------
+    def submit_for_review(self, user):
+        """Verplaats van concept naar review."""
+        if self.status != self.Status.CONCEPT:
+            raise ValidationError("Alleen concepten kunnen ter review worden ingediend.")
+        self.status = self.Status.REVIEW
+        self.save(update_fields=["status", "updated_at"])
+
+    def approve(self, user):
+        """Verplaats van review naar goedgekeurd."""
+        if self.status != self.Status.REVIEW:
+            raise ValidationError("Alleen items in review kunnen worden goedgekeurd.")
+        self.status = self.Status.APPROVED
+        self.save(update_fields=["status", "updated_at"])
+
     def __str__(self):
         return f"{self.instrument} - {self.subject} ({self.date})"
 
diff --git a/instruments/templates/instruments/partials/submission_main_form.html b/instruments/templates/instruments/partials/submission_main_form.html
index 394f9fd..557286d 100644
--- a/instruments/templates/instruments/partials/submission_main_form.html
+++ b/instruments/templates/instruments/partials/submission_main_form.html
@@ -2,7 +2,8 @@
 
 <div class="card mx-auto mb-4">
   <div class="card-header d-flex justify-content-between align-items-center">
-    <h1 class="h4 mb-0"><span id="form-title">
+    <h1 class="h4 mb-0 d-flex align-items-center">
+      <span id="form-title">
       {% if object %}
         {% if object.instrument.name == "Schriftelijke vragen" %}
           {{ object.instrument }} van {{ object.date|date:"j F Y" }} inzake {{ object.subject }}
@@ -44,7 +45,17 @@
           {% endif %}
         {% endwith %}
       {% endif %}
-    </span></h1>
+    </span>
+      {% if object %}
+        <span class="badge ms-2
+          {% if object.status == 'concept' %}bg-secondary
+          {% elif object.status == 'review' %}bg-warning text-dark
+          {% elif object.status == 'approved' %}bg-success
+          {% endif %}">
+          {{ object.get_status_display }}
+        </span>
+      {% endif %}
+    </h1>
   </div>
   <div class="card-body px-3 py-2">
     <form method="POST">
@@ -64,6 +75,12 @@
               <i class="bi bi-trash"></i> Verwijder
             </a>
           {% endif %}
+          {% if object and object.status == 'concept' %}
+            <a href="{% url 'instrument_submission_submit_review' object.pk %}"
+               class="btn btn-outline-success">
+              <i class="bi bi-send"></i> Indienen ter review
+            </a>
+          {% endif %}
         </div>
         {% if object %}
         <div class="btn-group" role="group" aria-label="Secondary actions">
@@ -109,6 +126,12 @@
               <i class="bi bi-trash"></i> Verwijderen
             </a>
           {% endif %}
+          {% if object and object.status == 'concept' %}
+            <a href="{% url 'instrument_submission_submit_review' object.pk %}"
+               class="btn btn-outline-success w-100">
+              <i class="bi bi-send"></i> Indienen ter review
+            </a>
+          {% endif %}
         </div>
 
         {% if object %}
diff --git a/instruments/templates/instruments/submission_list.html b/instruments/templates/instruments/submission_list.html
index 97d9d0d..91d1ee1 100644
--- a/instruments/templates/instruments/submission_list.html
+++ b/instruments/templates/instruments/submission_list.html
@@ -127,6 +127,7 @@
                       {% if sort == 'updated_at' %}<i class="bi bi-arrow-up ms-1"></i>{% elif sort == 'updated_at_desc' %}<i class="bi bi-arrow-down ms-1"></i>{% endif %}
                     </a>
                   </th>
+                  <th class="fw-semibold text-dark">Status</th>
                   <th class="fw-semibold text-dark">Indieners</th>
                   <th class="fw-semibold text-dark">Acties</th>
                   {% endwith %}
@@ -136,9 +137,15 @@
                 {% for submission in submissions %}
                   <tr>
                     <td>
-                      <a href="{% url 'instrument_submission_edit' submission.pk %}" class="text-decoration-none">
-                        {{ submission.instrument }} inzake {{ submission.subject }}.
-                      </a>
+                      {% if submission.status == 'concept' %}
+                        <a href="{% url 'instrument_submission_edit' submission.pk %}" class="text-decoration-none">
+                          {{ submission.instrument }} inzake {{ submission.subject }}.
+                        </a>
+                      {% else %}
+                        <a href="{% url 'instrument_submission_detail' submission.pk %}" class="text-decoration-none">
+                          {{ submission.instrument }} inzake {{ submission.subject }}.
+                        </a>
+                      {% endif %}
                     </td>
                     
                     <td>
@@ -162,6 +169,15 @@
                       {% endlanguage %}
                     </td>
                     <td>{% language 'nl' %}{{ submission.updated_at|date:"j F Y H:i" }}{% endlanguage %}</td>
+                    <td>
+                      <span class="badge
+                        {% if submission.status == 'concept' %}text-bg-secondary
+                        {% elif submission.status == 'review' %}text-bg-warning text-dark
+                        {% elif submission.status == 'approved' %}text-bg-success
+                        {% endif %}">
+                        {{ submission.get_status_display }}
+                      </span>
+                    </td>
                     <td>
                       {% with submitters=submission.submitters.all %}
                       <span class="badge text-bg-secondary rounded-pill">{{ submitters|length }}</span> {# rounded-pill #}
@@ -175,12 +191,25 @@
                     <td>
                       {# Vereenvoudigde actieknop layout #}
                       <div class=" btn-group btn-group-sm" role="group">
-                        <a href="{% url 'instrument_submission_edit' submission.pk %}" class="btn btn-sm btn-outline-secondary" title="Bewerken">
-                          <i class="bi bi-pencil"></i>
-                        </a>
-                        <a href="{% url 'instrument_submission_delete' submission.pk %}" class="btn btn-sm btn-outline-danger" title="Verwijderen">
-                          <i class="bi bi-trash"></i>
-                        </a>
+                        {% if submission.status == 'concept' %}
+                          <a href="{% url 'instrument_submission_edit' submission.pk %}" class="btn btn-sm btn-outline-secondary" title="Bewerken">
+                            <i class="bi bi-pencil"></i>
+                          </a>
+                          <a href="{% url 'instrument_submission_delete' submission.pk %}" class="btn btn-sm btn-outline-danger" title="Verwijderen">
+                            <i class="bi bi-trash"></i>
+                          </a>
+                        {% endif %}
+                        {% if submission.status == 'concept' %}
+                          <a href="{% url 'instrument_submission_submit_review' submission.pk %}"
+                             class="btn btn-sm btn-outline-success" title="Indienen ter review">
+                            <i class="bi bi-send"></i>
+                          </a>
+                        {% elif submission.status == 'review' and perms.instruments.can_approve_submission %}
+                          <a href="{% url 'instrument_submission_approve' submission.pk %}"
+                             class="btn btn-sm btn-outline-success" title="Goedkeuren">
+                            <i class="bi bi-check-lg"></i>
+                          </a>
+                        {% endif %}
                         {# Export Modal Knop #}
                         <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#exportModal-{{ submission.pk }}" title="Download opties">
                           <i class="bi bi-download"></i>
@@ -305,7 +334,7 @@
                   </tr>
                 {% empty %}
                   <tr>
-                    <td colspan="6" class="text-center text-muted py-3"> {# Padding toegevoegd #}
+                    <td colspan="7" class="text-center text-muted py-3"> {# Padding toegevoegd #}
                         {% if request.GET %}
                             Geen indieningen gevonden die voldoen aan de filters. <a href="{% url 'instrument_submission_list' %}" class="text-decoration-none ms-2">Reset filters</a>.
                         {% else %}
@@ -327,10 +356,17 @@
           <div class="list-group-item py-3">
 
             {# 1e regel: instrument + subject #}
-            <a href="{% url 'instrument_submission_edit' submission.pk %}"
-               class="fw-semibold text-decoration-none d-block">
-              {{ submission.instrument }} inzake {{ submission.subject }}.
-            </a>
+            {% if submission.status == 'concept' %}
+              <a href="{% url 'instrument_submission_edit' submission.pk %}"
+                 class="fw-semibold text-decoration-none d-block">
+                {{ submission.instrument }} inzake {{ submission.subject }}.
+              </a>
+            {% else %}
+              <a href="{% url 'instrument_submission_detail' submission.pk %}"
+                 class="fw-semibold text-decoration-none d-block">
+                {{ submission.instrument }} inzake {{ submission.subject }}.
+              </a>
+            {% endif %}
 
             {# 2e regel: datum | indieners #}
             <div class="small text-muted mt-1">
@@ -345,19 +381,38 @@
                   <span class="text-muted ms-1">Geen indieners</span>
                 {% endfor %}
               {% endwith %}
+              <span class="badge ms-1
+                {% if submission.status == 'concept' %}text-bg-secondary
+                {% elif submission.status == 'review' %}text-bg-warning text-dark
+                {% elif submission.status == 'approved' %}text-bg-success
+                {% endif %}">
+                {{ submission.get_status_display }}
+              </span>
             </div>
 
             {# 3e regel: acties #}
             <div class="btn-group btn-group-sm mt-2" role="group">
-              <a href="{% url 'instrument_submission_edit' submission.pk %}"
-                 class="btn btn-sm btn-outline-secondary" title="Bewerken">
-                <i class="bi bi-pencil"></i>
-              </a>
-              <a href="{% url 'instrument_submission_delete' submission.pk %}"
-                 class="btn btn-sm btn-outline-danger" title="Verwijderen">
-                <i class="bi bi-trash"></i>
-              </a>
-
+              {% if submission.status == 'concept' %}
+                <a href="{% url 'instrument_submission_edit' submission.pk %}"
+                   class="btn btn-sm btn-outline-secondary" title="Bewerken">
+                  <i class="bi bi-pencil"></i>
+                </a>
+                <a href="{% url 'instrument_submission_delete' submission.pk %}"
+                   class="btn btn-sm btn-outline-danger" title="Verwijderen">
+                  <i class="bi bi-trash"></i>
+                </a>
+              {% endif %}
+              {% if submission.status == 'concept' %}
+                <a href="{% url 'instrument_submission_submit_review' submission.pk %}"
+                   class="btn btn-sm btn-outline-success" title="Indienen ter review">
+                  <i class="bi bi-send"></i>
+                </a>
+              {% elif submission.status == 'review' and perms.instruments.can_approve_submission %}
+                <a href="{% url 'instrument_submission_approve' submission.pk %}"
+                   class="btn btn-sm btn-outline-success" title="Goedkeuren">
+                  <i class="bi bi-check-lg"></i>
+                </a>
+              {% endif %}
               <button type="button" class="btn btn-sm btn-outline-secondary"
                       data-bs-toggle="modal"
                       data-bs-target="#exportModalMobile-{{ submission.pk }}"
diff --git a/instruments/tests.py b/instruments/tests.py
index 420b3d5..c6cade0 100644
--- a/instruments/tests.py
+++ b/instruments/tests.py
@@ -3,6 +3,7 @@ from django.contrib.auth import get_user_model
 from instruments.models import InstrumentSubmission, Note
 from datetime import date
 from django.utils import timezone
+from django.core.exceptions import ValidationError
 
 User = get_user_model()
 
@@ -50,3 +51,76 @@ def test_note_str():
     # __str__ bevat "Notitie door <user> op <YYYY-MM-DD>"
     txt = str(note)
     assert "Notitie door Note Tester, None (notetester@example.com) op " in txt
+
+
+# ------------------------------------------------------------------
+# Workflowâ€‘gerelateerde tests
+# ------------------------------------------------------------------
+
+@pytest.mark.django_db
+def test_default_status_is_concept():
+    """Nieuwe submissions moeten standaard de status 'concept' krijgen."""
+    user = User.objects.create_user(
+        email="status@example.com",
+        password="secret",
+        initials="S.",
+        last_name="Tester",
+    )
+    sub = InstrumentSubmission.objects.create(
+        owner=user,
+        instrument="Violin",
+        subject="Status test",
+        date=date.today(),
+    )
+    assert sub.status == InstrumentSubmission.Status.CONCEPT
+
+
+@pytest.mark.django_db
+def test_submit_for_review_transition():
+    """submit_for_review() mag alleen vanuit 'concept' en zet status op 'review'."""
+    user = User.objects.create_user(
+        email="transition@example.com",
+        password="secret",
+        initials="T.",
+        last_name="Tester",
+    )
+    sub = InstrumentSubmission.objects.create(
+        owner=user,
+        instrument="Flute",
+        subject="Transition test",
+        date=date.today(),
+    )
+    # Geldige transitie
+    sub.submit_for_review(user)
+    assert sub.status == InstrumentSubmission.Status.REVIEW
+
+    # Een tweede keer mag niet
+    with pytest.raises(ValidationError):
+        sub.submit_for_review(user)
+
+
+@pytest.mark.django_db
+def test_approve_transition():
+    """approve() mag alleen vanuit 'review' en zet status op 'approved'."""
+    user = User.objects.create_user(
+        email="approve@example.com",
+        password="secret",
+        initials="A.",
+        last_name="Tester",
+    )
+    sub = InstrumentSubmission.objects.create(
+        owner=user,
+        instrument="Drum",
+        subject="Approve test",
+        date=date.today(),
+    )
+
+    # Eerst naar review
+    sub.submit_for_review(user)
+    # Dan goedkeuren
+    sub.approve(user)
+    assert sub.status == InstrumentSubmission.Status.APPROVED
+
+    # Nogmaals goedkeuren moet falen
+    with pytest.raises(ValidationError):
+        sub.approve(user)
diff --git a/instruments/urls.py b/instruments/urls.py
index e60e07d..cf22365 100644
--- a/instruments/urls.py
+++ b/instruments/urls.py
@@ -24,4 +24,6 @@ urlpatterns = [
     path("submissions/<int:pk>/export-latex-source/", export_and_email_views.export_submission_latex_source, name="instrument_submission_export_latex_source"),
     path("submissions/<int:pk>/export-zip/", export_and_email_views.export_submission_zip, name="instrument_submission_export_zip"),
     path("submissions/<int:pk>/email-export/", export_and_email_views.email_export, name="instrument_email_export"),
+    path("<int:pk>/submit/", views.submission_submit_for_review, name="instrument_submission_submit_review"),
+    path("<int:pk>/approve/", views.submission_approve, name="instrument_submission_approve"),
 ]
\ No newline at end of file
diff --git a/instruments/views.py b/instruments/views.py
index 3107ded..e76adfe 100644
--- a/instruments/views.py
+++ b/instruments/views.py
@@ -17,6 +17,9 @@ from django.urls import reverse_lazy
 from django.template.loader import render_to_string
 from django.http import HttpResponse, JsonResponse, HttpResponseForbidden, Http404
 from django.contrib import messages
+from django.contrib.auth.decorators import permission_required
+from django.contrib.auth.decorators import login_required
+from django.core.exceptions import ValidationError
 
 from instruments.models import InstrumentSubmission, Note
 from instruments.forms import InstrumentSubmissionForm, SubmitterFormSet, NoteForm
@@ -92,9 +95,12 @@ class InstrumentSubmissionUpdateView(UpdateView):
     template_name = "instruments/submission_form.html"
 
     def get_queryset(self):
-        # Zorg dat de gebruiker enkel zijn eigen submissions kan bewerken
+        # Alleen submissions van de eigenaar in status 'concept' mogen worden bewerkt
         qs = super().get_queryset()
-        return qs.filter(owner=self.request.user)
+        return qs.filter(
+            owner=self.request.user,
+            status=InstrumentSubmission.Status.CONCEPT
+        )
 
     def get_context_data(self, **kwargs):
         # Voeg de submitter formset toe aan de context
@@ -158,6 +164,34 @@ class InstrumentSubmissionUpdateView(UpdateView):
         # Valideer geen AJAX? Laat de standaard UpdateView doorlopen
         return super().post(request, *args, **kwargs)
 
+ 
+# ------------------------------------------------------------------
+# Workflowâ€‘transitie acties
+# ------------------------------------------------------------------
+@login_required
+def submission_submit_for_review(request, pk):
+    """Verplaats een submission van concept naar review."""
+    submission = get_object_or_404(InstrumentSubmission, pk=pk, owner=request.user)
+    try:
+        submission.submit_for_review(request.user)
+        messages.success(request, "Ingediend voor review.")
+    except ValidationError as e:
+        messages.error(request, e.message)
+    return redirect("instrument_submission_detail", pk=submission.pk)
+
+
+@permission_required("instruments.can_approve_submission")
+def submission_approve(request, pk):
+    """Verplaats een submission van review naar goedgekeurd."""
+    submission = get_object_or_404(InstrumentSubmission, pk=pk)
+    try:
+        submission.approve(request.user)
+        messages.success(request, "Submission goedgekeurd.")
+    except ValidationError as e:
+        messages.error(request, e.message)
+    return redirect("instrument_submission_detail", pk=submission.pk)
+
+
 class InstrumentSubmissionDeleteView(DeleteView):
     """
     View voor het verwijderen van een instrument submission.
@@ -168,9 +202,11 @@ class InstrumentSubmissionDeleteView(DeleteView):
     success_url = reverse_lazy("instrument_submission_list")
 
     def get_queryset(self):
-        # Zorg dat de gebruiker enkel zijn eigen submissions kan verwijderen
         qs = super().get_queryset()
-        return qs.filter(owner=self.request.user)
+        return qs.filter(
+            owner=self.request.user,
+            status=InstrumentSubmission.Status.CONCEPT
+        )
 
 
 class InstrumentSubmissionListView(ListView):
@@ -184,8 +220,30 @@ class InstrumentSubmissionListView(ListView):
     paginate_by = 10
 
     def get_queryset(self):
-        # Begin met alleen de submissions van de ingelogde gebruiker
-        queryset = super().get_queryset().filter(owner=self.request.user).prefetch_related("submitters")
+        """
+        Bepaal welke submissions worden getoond.
+
+        * Gewone gebruikers zien alleen hun eigen submissions.
+        * Gebruikers met het recht ``instruments.can_approve_submission`` zien
+          alle items die in review staan **plus** hun eigen concepten/approved.
+        """
+        base_qs = super().get_queryset().prefetch_related("submitters")
+
+        # Anonieme bezoeker? toon niets
+        if self.request.user.is_anonymous:
+            return base_qs.none()
+
+        if self.request.user.has_perm("instruments.can_approve_submission"):
+            # Laat alles in review zien + eigen items (ongeacht status)
+            queryset = base_qs.filter(
+                Q(status=InstrumentSubmission.Status.REVIEW) |
+                Q(owner=self.request.user)
+            )
+        else:
+            # Alleen eigen submissions
+            queryset = base_qs.filter(owner=self.request.user)
+
+        # --- tekstâ€‘zoekfilter -------------------------------------------------
         q = self.request.GET.get("q", "").strip()
         if q:
             queryset = queryset.filter(
@@ -195,10 +253,12 @@ class InstrumentSubmissionListView(ListView):
                 Q(instrument__icontains=q)
             ).distinct()
 
+        # --- instrumentâ€‘filter ------------------------------------------------
         instrument_filter = self.request.GET.get("instrument", "")
         if instrument_filter:
             queryset = queryset.filter(instrument__iexact=instrument_filter)
 
+        # --- datumâ€‘rangeâ€‘filter ----------------------------------------------
         date_from = self.request.GET.get("date_from", "")
         date_to = self.request.GET.get("date_to", "")
         if date_from:
@@ -206,21 +266,19 @@ class InstrumentSubmissionListView(ListView):
         if date_to:
             queryset = queryset.filter(date__lte=date_to)
 
+        # --- sortering --------------------------------------------------------
         sort = self.request.GET.get("sort")
         if sort:
-            # Implementeer hier je sorteerlogica (bv. met een helper functie of direct)
-            # Zorg ervoor dat de sorteervelden veilig zijn
+            # veilige sorteerlogica
             allowed_sort_fields = ['subject', 'instrument', 'date', 'updated_at']
             sort_field = sort.replace('_desc', '')
             direction = '-' if sort.endswith('_desc') else ''
 
             if sort_field in allowed_sort_fields:
-                 queryset = queryset.order_by(f"{direction}{sort_field}")
-            # else: negeer ongeldige sorteerparameter of gebruik default
-
-        # Default sortering als er geen geldige sort is opgegeven
-        elif not queryset.query.order_by:
-             queryset = queryset.order_by('-updated_at') # Bijvoorbeeld default op laatst bewerkt
+                queryset = queryset.order_by(f"{direction}{sort_field}")
+        else:
+            # default sortering: laatst bewerkt
+            queryset = queryset.order_by('-updated_at')
 
         return queryset
 
@@ -231,7 +289,7 @@ class InstrumentSubmissionListView(ListView):
 
         # Haal unieke instrumentsoorten voor de filter dropdown
         context["instrument_choices"] = (
-            InstrumentSubmission.objects.filter(owner=self.request.user)
+            self.get_queryset()
             .order_by("instrument")
             .values_list("instrument", flat=True)
             .distinct()
@@ -288,6 +346,10 @@ class SubmissionDisplayView(DetailView):
 
     def get_queryset(self):
         qs = super().get_queryset()
+        # Reviewers/staf (met permissie) mogen alle submissions bekijken
+        if self.request.user.has_perm("instruments.can_approve_submission"):
+            return qs
+        # Overige gebruikers zien alleen hun eigen items
         return qs.filter(owner=self.request.user)
 
     def get_context_data(self, **kwargs):
@@ -320,6 +382,8 @@ class SubmissionNotePostView(SingleObjectMixin, View):
 
     def get_queryset(self):
         qs = super().get_queryset()
+        if self.request.user.has_perm("instruments.can_approve_submission"):
+            return qs
         return qs.filter(owner=self.request.user)
 
     def post(self, request, *args, **kwargs):
diff --git a/staticfiles_collected/instruments/js/instrument_form.js b/staticfiles_collected/instruments/js/instrument_form.js
index 7fc84b6..fc2c6ed 100644
--- a/staticfiles_collected/instruments/js/instrument_form.js
+++ b/staticfiles_collected/instruments/js/instrument_form.js
@@ -1,29 +1,50 @@
+console.log("instrument_form.js geladen");
 document.addEventListener('DOMContentLoaded', function() {
     const select = document.getElementById('id_instrument');
     const dateLabel = document.querySelector('label[for="id_date"]');
     const subjectLabel = document.querySelector('label[for="id_subject"]');
     const considerationsLabel = document.querySelector('label[for="id_considerations"]');
-    const requestsRow = document.getElementById('id_requests').closest('.form-row');
+    const instrumentLabel = document.querySelector('label[for="id_instrument"]');
+    const requestsLabel = document.querySelector('label[for="id_requests"]');
+    const requestsContainer = document.getElementById('id_requests').parentNode;
   
     function updateLabels() {
-      const val = select.value;
-      if (val === 'Mondelinge vragen') {
-        dateLabel.textContent = 'Datum vergadering';
-        requestsRow.style.display = '';
-      } else if (val === 'Schriftelijke vragen') {
-        dateLabel.textContent = 'Datum indiening';
-        requestsRow.style.display = '';
-      } else if (val === 'Agendapunt' || val === 'Actualiteit') {
-        dateLabel.textContent = 'Datum';
-        requestsRow.style.display = 'none';
-      } else if (val === 'Motie') {
-        dateLabel.textContent = 'Datum vergadering';
-        requestsRow.style.display = '';
-      } else {
-        dateLabel.textContent = 'Datum';
-        requestsRow.style.display = '';
-      }
-      // Pas hier ook subjectLabel en considerationsLabel aan indien gewenst
+        const val = select.value;
+
+        // Always reset instrument label
+        instrumentLabel.textContent = 'Instrument';
+
+        if (val === 'Mondelinge vragen') {
+            dateLabel.textContent = 'Datum vergadering';
+            subjectLabel.textContent = 'Onderwerp';
+            considerationsLabel.textContent = 'Toelichting';
+            requestsLabel.textContent = 'Vragen';
+            requestsContainer.style.display = '';
+        } else if (val === 'Schriftelijke vragen') {
+            dateLabel.textContent = 'Datum indiening';
+            subjectLabel.textContent = 'Onderwerp';
+            considerationsLabel.textContent = 'Toelichting';
+            requestsLabel.textContent = 'Vragen';
+            requestsContainer.style.display = '';
+        } else if (val === 'Agendapunt' || val === 'Actualiteit') {
+            dateLabel.textContent = 'Datum';
+            subjectLabel.textContent = 'Onderwerp';
+            considerationsLabel.textContent = 'Toelichting';
+            requestsLabel.textContent = '';
+            requestsContainer.style.display = 'none';
+        } else if (val === 'Motie') {
+            dateLabel.textContent = 'Datum vergadering';
+            subjectLabel.textContent = 'Onderwerp';
+            considerationsLabel.textContent = 'Overwegingen';
+            requestsLabel.textContent = 'Verzoeken';
+            requestsContainer.style.display = '';
+        } else {
+            dateLabel.textContent = 'Datum';
+            subjectLabel.textContent = 'Onderwerp';
+            considerationsLabel.textContent = 'Toelichting/overwegingen';
+            requestsLabel.textContent = 'Vragen/verzoeken';
+            requestsContainer.style.display = '';
+        }
     }
   
     select.addEventListener('change', updateLabels);
